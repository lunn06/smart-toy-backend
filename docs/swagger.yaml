definitions:
  requests.LoginRequest:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        type: string
    type: object
  requests.LoginResponse:
    properties:
      accessToken:
        type: string
      error:
        type: string
      message:
        type: string
      refreshToken:
        type: string
    type: object
  requests.LogoutRequest:
    properties:
      refreshToken:
        type: string
    type: object
  requests.LogoutResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  requests.RefreshTokensRequest:
    properties:
      fingerprint:
        type: string
      refreshToken:
        type: string
    type: object
  requests.RefreshTokensResponse:
    properties:
      accessToken:
        type: string
      error:
        type: string
      message:
        type: string
      refreshToken:
        type: string
    type: object
  requests.RegisterRequest:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        type: string
    type: object
  requests.RegisterResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
  description: API Server for Smart Toy
  title: Smart Toy API
  version: "0.1"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: accepts json with user info and authorize him
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequest'
      - description: session info
        in: body
        name: output
        required: true
        schema:
          $ref: '#/definitions/requests.LoginResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Login was successful'
        "400":
          description: 'error: Invalid to insert token'
        "403":
          description: 'error: Invalid email or password'
        "422":
          description: 'error: Invalid password size'
        "500":
          description: 'error: Invalid to create token'
      summary: login the user
      tags:
      - authorization
  /api/auth/logout:
    delete:
      consumes:
      - application/json
      description: accepts json with refresh token and delete session
      parameters:
      - description: session info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.LogoutRequest'
      - description: response info
        in: body
        name: output
        required: true
        schema:
          $ref: '#/definitions/requests.LogoutResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Logout was successful'
        "400":
          description: 'error: Failed to read body'
        "500":
          description: 'error: Invalid to remove session'
      summary: delete user session
      tags:
      - authorization
  /api/auth/ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: plain
      summary: ping example
      tags:
      - example
  /api/auth/refresh:
    post:
      consumes:
      - application/json
      description: accept json and refresh user tokens
      parameters:
      - description: session info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokensRequest'
      - description: response info
        in: body
        name: output
        required: true
        schema:
          $ref: '#/definitions/requests.RefreshTokensResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: RefreshTokens was successful'
        "401":
          description: 'error: Invalid to get refresh token from cookie'
        "500":
          description: 'error: Invalid to create token'
      summary: refresh user's tokens
      tags:
      - authorization
  /api/auth/registration:
    post:
      consumes:
      - application/json
      description: accepts json with user info and registers him
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterRequest'
      - description: response info
        in: body
        name: output
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterResponse'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Registration was successful'
        "400":
          description: 'error: Failed to read body'
        "409":
          description: 'error: email or channel already been use'
        "422":
          description: 'error: Failed create password, because it exceeds the character
            limit or backwards'
        "500":
          description: 'error: Failed to hash password. Please, try again later'
      summary: register user
      tags:
      - authorization
  /api/upload:
    post:
      consumes:
      - application/json
      description: accepts file and upload it
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Uploade was successful'
        "400":
          description: 'error: Only JSON file accepted'
      summary: upload a JSON
      tags:
      - upload
swagger: "2.0"
